// Copyright 2025 the Vello Authors
// SPDX-License-Identifier: Apache-2.0 OR MIT

//! Build step for `vello_sparse_tests`.
//!
//! This build step exists primarily for the wasm32 target testing the browser exclusive "webgl"
//! feature which cannot read snapshot images from the file system. Instead, the reference images
//! are inlined into the binary.
#[cfg(not(feature = "webgl"))]
fn main() {}
#[cfg(feature = "webgl")]
fn main() {
    use std::fs;
    use std::io::Write;
    use std::path::Path;
    println!("cargo:rerun-if-changed=snapshots");

    let out_dir = std::env::var("OUT_DIR").unwrap();
    let dest_path = Path::new(&out_dir).join("reference_images.rs");
    let mut f = fs::File::create(&dest_path).unwrap();

    writeln!(
        f,
        "// Generated by build.rs: Inlined reference images for WASM tests"
    )
    .unwrap();
    writeln!(f).unwrap();
    writeln!(
        f,
        "fn get_reference_image(name: &str) -> Option<&'static [u8]> {{"
    )
    .unwrap();
    writeln!(f, "    match name {{").unwrap();

    let snapshot_dir = Path::new("../vello_sparse_tests/snapshots");
    if snapshot_dir.exists() {
        for entry in fs::read_dir(snapshot_dir).unwrap() {
            let entry = entry.unwrap();
            let path = entry.path();
            if path.extension().and_then(|s| s.to_str()) == Some("png") {
                let name = path.file_stem().unwrap().to_str().unwrap();
                writeln!(
                    f,
                    r#"        "{}" => Some(include_bytes!(concat!(env!("CARGO_MANIFEST_DIR"), "/../vello_sparse_tests/snapshots/{}.png"))),"#,
                    name, name
                ).unwrap();
            }
        }
    }

    writeln!(f, "        _ => None,").unwrap();
    writeln!(f, "    }}").unwrap();
    writeln!(f, "}}").unwrap();
}
