[package]
name = "vello_hybrid"
version.workspace = true
description = "A hybrid CPU/GPU renderer for Vello, balancing computation between CPU and GPU for efficiency."
categories = ["rendering", "graphics"]
keywords = ["2d", "vector-graphics"]
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
# Prevent accidental publishing until the initial release
publish = false

[lints]
workspace = true

[dependencies]
bytemuck = { workspace = true, features = ["derive"] }
thiserror = { workspace = true }
vello_common = { workspace = true, features = ["std", "text"] }
wgpu = { workspace = true, optional = true }
vello_sparse_shaders = { workspace = true, optional = true }
log = { workspace = true }
guillotiere = "0.6.2"
hashbrown = "0.15"


[target.'cfg(target_arch = "wasm32")'.dependencies]
js-sys = { version = "0.3.77", optional = true }
web-sys = { version = "0.3.77", features = [
    "HtmlCanvasElement",
    "WebGl2RenderingContext",
    "WebGlContextAttributes",
    "WebGlProgram",
    "WebGlUniformLocation",
    "WebGlBuffer",
    "WebGlShader",
    "WebGlTexture",
    "WebGlFramebuffer",
    "WebGlVertexArrayObject",
], optional = true }

[[example]]
name = "render_to_file"
required-features = ["wgpu"]

[dev-dependencies]
png = { workspace = true }
pollster = { workspace = true }
vello_common = { workspace = true, features = ["pico_svg"] }
roxmltree = "0.20.0"

[features]
default = ["wgpu"]
std = ["wgpu", "vello_common/std"]
wgpu = ["dep:wgpu", "dep:vello_sparse_shaders"]
webgl = ["dep:js-sys", "dep:web-sys", "dep:vello_sparse_shaders", "vello_sparse_shaders/glsl"]
